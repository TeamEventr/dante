/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SupportIndexImport } from './routes/support/index'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as ExploreIndexImport } from './routes/explore/index'
import { Route as EventIndexImport } from './routes/event/index'
import { Route as AboutIndexImport } from './routes/about/index'
import { Route as UUIdImport } from './routes/u/$uId'
import { Route as ExploreCategoryImport } from './routes/explore/$category'
import { Route as UTicketsIndexImport } from './routes/u/tickets/index'
import { Route as UPurchasesIndexImport } from './routes/u/purchases/index'
import { Route as UProfileIndexImport } from './routes/u/profile/index'
import { Route as UFavouritesIndexImport } from './routes/u/favourites/index'
import { Route as HostJoinIndexImport } from './routes/host/join/index'
import { Route as HostDashboardIndexImport } from './routes/host/dashboard/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SupportIndexRoute = SupportIndexImport.update({
  id: '/support/',
  path: '/support/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const ExploreIndexRoute = ExploreIndexImport.update({
  id: '/explore/',
  path: '/explore/',
  getParentRoute: () => rootRoute,
} as any)

const EventIndexRoute = EventIndexImport.update({
  id: '/event/',
  path: '/event/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const UUIdRoute = UUIdImport.update({
  id: '/u/$uId',
  path: '/u/$uId',
  getParentRoute: () => rootRoute,
} as any)

const ExploreCategoryRoute = ExploreCategoryImport.update({
  id: '/explore/$category',
  path: '/explore/$category',
  getParentRoute: () => rootRoute,
} as any)

const UTicketsIndexRoute = UTicketsIndexImport.update({
  id: '/u/tickets/',
  path: '/u/tickets/',
  getParentRoute: () => rootRoute,
} as any)

const UPurchasesIndexRoute = UPurchasesIndexImport.update({
  id: '/u/purchases/',
  path: '/u/purchases/',
  getParentRoute: () => rootRoute,
} as any)

const UProfileIndexRoute = UProfileIndexImport.update({
  id: '/u/profile/',
  path: '/u/profile/',
  getParentRoute: () => rootRoute,
} as any)

const UFavouritesIndexRoute = UFavouritesIndexImport.update({
  id: '/u/favourites/',
  path: '/u/favourites/',
  getParentRoute: () => rootRoute,
} as any)

const HostJoinIndexRoute = HostJoinIndexImport.update({
  id: '/host/join/',
  path: '/host/join/',
  getParentRoute: () => rootRoute,
} as any)

const HostDashboardIndexRoute = HostDashboardIndexImport.update({
  id: '/host/dashboard/',
  path: '/host/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/explore/$category': {
      id: '/explore/$category'
      path: '/explore/$category'
      fullPath: '/explore/$category'
      preLoaderRoute: typeof ExploreCategoryImport
      parentRoute: typeof rootRoute
    }
    '/u/$uId': {
      id: '/u/$uId'
      path: '/u/$uId'
      fullPath: '/u/$uId'
      preLoaderRoute: typeof UUIdImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/event/': {
      id: '/event/'
      path: '/event'
      fullPath: '/event'
      preLoaderRoute: typeof EventIndexImport
      parentRoute: typeof rootRoute
    }
    '/explore/': {
      id: '/explore/'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/support/': {
      id: '/support/'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof SupportIndexImport
      parentRoute: typeof rootRoute
    }
    '/host/dashboard/': {
      id: '/host/dashboard/'
      path: '/host/dashboard'
      fullPath: '/host/dashboard'
      preLoaderRoute: typeof HostDashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/host/join/': {
      id: '/host/join/'
      path: '/host/join'
      fullPath: '/host/join'
      preLoaderRoute: typeof HostJoinIndexImport
      parentRoute: typeof rootRoute
    }
    '/u/favourites/': {
      id: '/u/favourites/'
      path: '/u/favourites'
      fullPath: '/u/favourites'
      preLoaderRoute: typeof UFavouritesIndexImport
      parentRoute: typeof rootRoute
    }
    '/u/profile/': {
      id: '/u/profile/'
      path: '/u/profile'
      fullPath: '/u/profile'
      preLoaderRoute: typeof UProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/u/purchases/': {
      id: '/u/purchases/'
      path: '/u/purchases'
      fullPath: '/u/purchases'
      preLoaderRoute: typeof UPurchasesIndexImport
      parentRoute: typeof rootRoute
    }
    '/u/tickets/': {
      id: '/u/tickets/'
      path: '/u/tickets'
      fullPath: '/u/tickets'
      preLoaderRoute: typeof UTicketsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/explore/$category': typeof ExploreCategoryRoute
  '/u/$uId': typeof UUIdRoute
  '/about': typeof AboutIndexRoute
  '/event': typeof EventIndexRoute
  '/explore': typeof ExploreIndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/support': typeof SupportIndexRoute
  '/host/dashboard': typeof HostDashboardIndexRoute
  '/host/join': typeof HostJoinIndexRoute
  '/u/favourites': typeof UFavouritesIndexRoute
  '/u/profile': typeof UProfileIndexRoute
  '/u/purchases': typeof UPurchasesIndexRoute
  '/u/tickets': typeof UTicketsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/explore/$category': typeof ExploreCategoryRoute
  '/u/$uId': typeof UUIdRoute
  '/about': typeof AboutIndexRoute
  '/event': typeof EventIndexRoute
  '/explore': typeof ExploreIndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/support': typeof SupportIndexRoute
  '/host/dashboard': typeof HostDashboardIndexRoute
  '/host/join': typeof HostJoinIndexRoute
  '/u/favourites': typeof UFavouritesIndexRoute
  '/u/profile': typeof UProfileIndexRoute
  '/u/purchases': typeof UPurchasesIndexRoute
  '/u/tickets': typeof UTicketsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/explore/$category': typeof ExploreCategoryRoute
  '/u/$uId': typeof UUIdRoute
  '/about/': typeof AboutIndexRoute
  '/event/': typeof EventIndexRoute
  '/explore/': typeof ExploreIndexRoute
  '/login/': typeof LoginIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/support/': typeof SupportIndexRoute
  '/host/dashboard/': typeof HostDashboardIndexRoute
  '/host/join/': typeof HostJoinIndexRoute
  '/u/favourites/': typeof UFavouritesIndexRoute
  '/u/profile/': typeof UProfileIndexRoute
  '/u/purchases/': typeof UPurchasesIndexRoute
  '/u/tickets/': typeof UTicketsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/explore/$category'
    | '/u/$uId'
    | '/about'
    | '/event'
    | '/explore'
    | '/login'
    | '/register'
    | '/support'
    | '/host/dashboard'
    | '/host/join'
    | '/u/favourites'
    | '/u/profile'
    | '/u/purchases'
    | '/u/tickets'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/explore/$category'
    | '/u/$uId'
    | '/about'
    | '/event'
    | '/explore'
    | '/login'
    | '/register'
    | '/support'
    | '/host/dashboard'
    | '/host/join'
    | '/u/favourites'
    | '/u/profile'
    | '/u/purchases'
    | '/u/tickets'
  id:
    | '__root__'
    | '/'
    | '/explore/$category'
    | '/u/$uId'
    | '/about/'
    | '/event/'
    | '/explore/'
    | '/login/'
    | '/register/'
    | '/support/'
    | '/host/dashboard/'
    | '/host/join/'
    | '/u/favourites/'
    | '/u/profile/'
    | '/u/purchases/'
    | '/u/tickets/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExploreCategoryRoute: typeof ExploreCategoryRoute
  UUIdRoute: typeof UUIdRoute
  AboutIndexRoute: typeof AboutIndexRoute
  EventIndexRoute: typeof EventIndexRoute
  ExploreIndexRoute: typeof ExploreIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
  SupportIndexRoute: typeof SupportIndexRoute
  HostDashboardIndexRoute: typeof HostDashboardIndexRoute
  HostJoinIndexRoute: typeof HostJoinIndexRoute
  UFavouritesIndexRoute: typeof UFavouritesIndexRoute
  UProfileIndexRoute: typeof UProfileIndexRoute
  UPurchasesIndexRoute: typeof UPurchasesIndexRoute
  UTicketsIndexRoute: typeof UTicketsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExploreCategoryRoute: ExploreCategoryRoute,
  UUIdRoute: UUIdRoute,
  AboutIndexRoute: AboutIndexRoute,
  EventIndexRoute: EventIndexRoute,
  ExploreIndexRoute: ExploreIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
  SupportIndexRoute: SupportIndexRoute,
  HostDashboardIndexRoute: HostDashboardIndexRoute,
  HostJoinIndexRoute: HostJoinIndexRoute,
  UFavouritesIndexRoute: UFavouritesIndexRoute,
  UProfileIndexRoute: UProfileIndexRoute,
  UPurchasesIndexRoute: UPurchasesIndexRoute,
  UTicketsIndexRoute: UTicketsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/explore/$category",
        "/u/$uId",
        "/about/",
        "/event/",
        "/explore/",
        "/login/",
        "/register/",
        "/support/",
        "/host/dashboard/",
        "/host/join/",
        "/u/favourites/",
        "/u/profile/",
        "/u/purchases/",
        "/u/tickets/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/explore/$category": {
      "filePath": "explore/$category.tsx"
    },
    "/u/$uId": {
      "filePath": "u/$uId.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/event/": {
      "filePath": "event/index.tsx"
    },
    "/explore/": {
      "filePath": "explore/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    },
    "/support/": {
      "filePath": "support/index.tsx"
    },
    "/host/dashboard/": {
      "filePath": "host/dashboard/index.tsx"
    },
    "/host/join/": {
      "filePath": "host/join/index.tsx"
    },
    "/u/favourites/": {
      "filePath": "u/favourites/index.tsx"
    },
    "/u/profile/": {
      "filePath": "u/profile/index.tsx"
    },
    "/u/purchases/": {
      "filePath": "u/purchases/index.tsx"
    },
    "/u/tickets/": {
      "filePath": "u/tickets/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
