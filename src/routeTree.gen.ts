/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SupportImport } from './routes/support'
import { Route as HelpImport } from './routes/help'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as TicketsIndexImport } from './routes/tickets/index'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as PurchasesIndexImport } from './routes/purchases/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as FavouritesIndexImport } from './routes/favourites/index'
import { Route as ExploreIndexImport } from './routes/explore/index'
import { Route as UUIdImport } from './routes/u/$uId'
import { Route as TicketsTIdImport } from './routes/tickets/$tId'
import { Route as PurchasesPIdImport } from './routes/purchases/$pId'
import { Route as HostStaffImport } from './routes/host/staff'
import { Route as HostJoinImport } from './routes/host/join'
import { Route as HostDashboardIndexImport } from './routes/host/dashboard/index'
import { Route as EventEventIdIndexImport } from './routes/event/$eventId/index'
import { Route as HostDashboardLayoutImport } from './routes/host/dashboard/_layout'
import { Route as HostDashboardLayoutHomeImport } from './routes/host/dashboard/_layout.home'
import { Route as HostDashboardLayoutEventsImport } from './routes/host/dashboard/_layout.events'
import { Route as HostDashboardLayoutCreateImport } from './routes/host/dashboard/_layout.create'

// Create Virtual Routes

const HostDashboardImport = createFileRoute('/host/dashboard')()

// Create/Update Routes

const SupportRoute = SupportImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => rootRoute,
} as any)

const HelpRoute = HelpImport.update({
  id: '/help',
  path: '/help',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HostDashboardRoute = HostDashboardImport.update({
  id: '/host/dashboard',
  path: '/host/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const TicketsIndexRoute = TicketsIndexImport.update({
  id: '/tickets/',
  path: '/tickets/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const PurchasesIndexRoute = PurchasesIndexImport.update({
  id: '/purchases/',
  path: '/purchases/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const FavouritesIndexRoute = FavouritesIndexImport.update({
  id: '/favourites/',
  path: '/favourites/',
  getParentRoute: () => rootRoute,
} as any)

const ExploreIndexRoute = ExploreIndexImport.update({
  id: '/explore/',
  path: '/explore/',
  getParentRoute: () => rootRoute,
} as any)

const UUIdRoute = UUIdImport.update({
  id: '/u/$uId',
  path: '/u/$uId',
  getParentRoute: () => rootRoute,
} as any)

const TicketsTIdRoute = TicketsTIdImport.update({
  id: '/tickets/$tId',
  path: '/tickets/$tId',
  getParentRoute: () => rootRoute,
} as any)

const PurchasesPIdRoute = PurchasesPIdImport.update({
  id: '/purchases/$pId',
  path: '/purchases/$pId',
  getParentRoute: () => rootRoute,
} as any)

const HostStaffRoute = HostStaffImport.update({
  id: '/host/staff',
  path: '/host/staff',
  getParentRoute: () => rootRoute,
} as any)

const HostJoinRoute = HostJoinImport.update({
  id: '/host/join',
  path: '/host/join',
  getParentRoute: () => rootRoute,
} as any)

const HostDashboardIndexRoute = HostDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HostDashboardRoute,
} as any)

const EventEventIdIndexRoute = EventEventIdIndexImport.update({
  id: '/event/$eventId/',
  path: '/event/$eventId/',
  getParentRoute: () => rootRoute,
} as any)

const HostDashboardLayoutRoute = HostDashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => HostDashboardRoute,
} as any)

const HostDashboardLayoutHomeRoute = HostDashboardLayoutHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => HostDashboardLayoutRoute,
} as any)

const HostDashboardLayoutEventsRoute = HostDashboardLayoutEventsImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => HostDashboardLayoutRoute,
} as any)

const HostDashboardLayoutCreateRoute = HostDashboardLayoutCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => HostDashboardLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/help': {
      id: '/help'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof HelpImport
      parentRoute: typeof rootRoute
    }
    '/support': {
      id: '/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof SupportImport
      parentRoute: typeof rootRoute
    }
    '/host/join': {
      id: '/host/join'
      path: '/host/join'
      fullPath: '/host/join'
      preLoaderRoute: typeof HostJoinImport
      parentRoute: typeof rootRoute
    }
    '/host/staff': {
      id: '/host/staff'
      path: '/host/staff'
      fullPath: '/host/staff'
      preLoaderRoute: typeof HostStaffImport
      parentRoute: typeof rootRoute
    }
    '/purchases/$pId': {
      id: '/purchases/$pId'
      path: '/purchases/$pId'
      fullPath: '/purchases/$pId'
      preLoaderRoute: typeof PurchasesPIdImport
      parentRoute: typeof rootRoute
    }
    '/tickets/$tId': {
      id: '/tickets/$tId'
      path: '/tickets/$tId'
      fullPath: '/tickets/$tId'
      preLoaderRoute: typeof TicketsTIdImport
      parentRoute: typeof rootRoute
    }
    '/u/$uId': {
      id: '/u/$uId'
      path: '/u/$uId'
      fullPath: '/u/$uId'
      preLoaderRoute: typeof UUIdImport
      parentRoute: typeof rootRoute
    }
    '/explore/': {
      id: '/explore/'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreIndexImport
      parentRoute: typeof rootRoute
    }
    '/favourites/': {
      id: '/favourites/'
      path: '/favourites'
      fullPath: '/favourites'
      preLoaderRoute: typeof FavouritesIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/purchases/': {
      id: '/purchases/'
      path: '/purchases'
      fullPath: '/purchases'
      preLoaderRoute: typeof PurchasesIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/tickets/': {
      id: '/tickets/'
      path: '/tickets'
      fullPath: '/tickets'
      preLoaderRoute: typeof TicketsIndexImport
      parentRoute: typeof rootRoute
    }
    '/host/dashboard': {
      id: '/host/dashboard'
      path: '/host/dashboard'
      fullPath: '/host/dashboard'
      preLoaderRoute: typeof HostDashboardImport
      parentRoute: typeof rootRoute
    }
    '/host/dashboard/_layout': {
      id: '/host/dashboard/_layout'
      path: '/host/dashboard'
      fullPath: '/host/dashboard'
      preLoaderRoute: typeof HostDashboardLayoutImport
      parentRoute: typeof HostDashboardRoute
    }
    '/event/$eventId/': {
      id: '/event/$eventId/'
      path: '/event/$eventId'
      fullPath: '/event/$eventId'
      preLoaderRoute: typeof EventEventIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/host/dashboard/': {
      id: '/host/dashboard/'
      path: '/'
      fullPath: '/host/dashboard/'
      preLoaderRoute: typeof HostDashboardIndexImport
      parentRoute: typeof HostDashboardImport
    }
    '/host/dashboard/_layout/create': {
      id: '/host/dashboard/_layout/create'
      path: '/create'
      fullPath: '/host/dashboard/create'
      preLoaderRoute: typeof HostDashboardLayoutCreateImport
      parentRoute: typeof HostDashboardLayoutImport
    }
    '/host/dashboard/_layout/events': {
      id: '/host/dashboard/_layout/events'
      path: '/events'
      fullPath: '/host/dashboard/events'
      preLoaderRoute: typeof HostDashboardLayoutEventsImport
      parentRoute: typeof HostDashboardLayoutImport
    }
    '/host/dashboard/_layout/home': {
      id: '/host/dashboard/_layout/home'
      path: '/home'
      fullPath: '/host/dashboard/home'
      preLoaderRoute: typeof HostDashboardLayoutHomeImport
      parentRoute: typeof HostDashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface HostDashboardLayoutRouteChildren {
  HostDashboardLayoutCreateRoute: typeof HostDashboardLayoutCreateRoute
  HostDashboardLayoutEventsRoute: typeof HostDashboardLayoutEventsRoute
  HostDashboardLayoutHomeRoute: typeof HostDashboardLayoutHomeRoute
}

const HostDashboardLayoutRouteChildren: HostDashboardLayoutRouteChildren = {
  HostDashboardLayoutCreateRoute: HostDashboardLayoutCreateRoute,
  HostDashboardLayoutEventsRoute: HostDashboardLayoutEventsRoute,
  HostDashboardLayoutHomeRoute: HostDashboardLayoutHomeRoute,
}

const HostDashboardLayoutRouteWithChildren =
  HostDashboardLayoutRoute._addFileChildren(HostDashboardLayoutRouteChildren)

interface HostDashboardRouteChildren {
  HostDashboardLayoutRoute: typeof HostDashboardLayoutRouteWithChildren
  HostDashboardIndexRoute: typeof HostDashboardIndexRoute
}

const HostDashboardRouteChildren: HostDashboardRouteChildren = {
  HostDashboardLayoutRoute: HostDashboardLayoutRouteWithChildren,
  HostDashboardIndexRoute: HostDashboardIndexRoute,
}

const HostDashboardRouteWithChildren = HostDashboardRoute._addFileChildren(
  HostDashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/help': typeof HelpRoute
  '/support': typeof SupportRoute
  '/host/join': typeof HostJoinRoute
  '/host/staff': typeof HostStaffRoute
  '/purchases/$pId': typeof PurchasesPIdRoute
  '/tickets/$tId': typeof TicketsTIdRoute
  '/u/$uId': typeof UUIdRoute
  '/explore': typeof ExploreIndexRoute
  '/favourites': typeof FavouritesIndexRoute
  '/login': typeof LoginIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/purchases': typeof PurchasesIndexRoute
  '/register': typeof RegisterIndexRoute
  '/tickets': typeof TicketsIndexRoute
  '/host/dashboard': typeof HostDashboardLayoutRouteWithChildren
  '/event/$eventId': typeof EventEventIdIndexRoute
  '/host/dashboard/': typeof HostDashboardIndexRoute
  '/host/dashboard/create': typeof HostDashboardLayoutCreateRoute
  '/host/dashboard/events': typeof HostDashboardLayoutEventsRoute
  '/host/dashboard/home': typeof HostDashboardLayoutHomeRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/help': typeof HelpRoute
  '/support': typeof SupportRoute
  '/host/join': typeof HostJoinRoute
  '/host/staff': typeof HostStaffRoute
  '/purchases/$pId': typeof PurchasesPIdRoute
  '/tickets/$tId': typeof TicketsTIdRoute
  '/u/$uId': typeof UUIdRoute
  '/explore': typeof ExploreIndexRoute
  '/favourites': typeof FavouritesIndexRoute
  '/login': typeof LoginIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/purchases': typeof PurchasesIndexRoute
  '/register': typeof RegisterIndexRoute
  '/tickets': typeof TicketsIndexRoute
  '/host/dashboard': typeof HostDashboardIndexRoute
  '/event/$eventId': typeof EventEventIdIndexRoute
  '/host/dashboard/create': typeof HostDashboardLayoutCreateRoute
  '/host/dashboard/events': typeof HostDashboardLayoutEventsRoute
  '/host/dashboard/home': typeof HostDashboardLayoutHomeRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/help': typeof HelpRoute
  '/support': typeof SupportRoute
  '/host/join': typeof HostJoinRoute
  '/host/staff': typeof HostStaffRoute
  '/purchases/$pId': typeof PurchasesPIdRoute
  '/tickets/$tId': typeof TicketsTIdRoute
  '/u/$uId': typeof UUIdRoute
  '/explore/': typeof ExploreIndexRoute
  '/favourites/': typeof FavouritesIndexRoute
  '/login/': typeof LoginIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/purchases/': typeof PurchasesIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/tickets/': typeof TicketsIndexRoute
  '/host/dashboard': typeof HostDashboardRouteWithChildren
  '/host/dashboard/_layout': typeof HostDashboardLayoutRouteWithChildren
  '/event/$eventId/': typeof EventEventIdIndexRoute
  '/host/dashboard/': typeof HostDashboardIndexRoute
  '/host/dashboard/_layout/create': typeof HostDashboardLayoutCreateRoute
  '/host/dashboard/_layout/events': typeof HostDashboardLayoutEventsRoute
  '/host/dashboard/_layout/home': typeof HostDashboardLayoutHomeRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/help'
    | '/support'
    | '/host/join'
    | '/host/staff'
    | '/purchases/$pId'
    | '/tickets/$tId'
    | '/u/$uId'
    | '/explore'
    | '/favourites'
    | '/login'
    | '/profile'
    | '/purchases'
    | '/register'
    | '/tickets'
    | '/host/dashboard'
    | '/event/$eventId'
    | '/host/dashboard/'
    | '/host/dashboard/create'
    | '/host/dashboard/events'
    | '/host/dashboard/home'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/help'
    | '/support'
    | '/host/join'
    | '/host/staff'
    | '/purchases/$pId'
    | '/tickets/$tId'
    | '/u/$uId'
    | '/explore'
    | '/favourites'
    | '/login'
    | '/profile'
    | '/purchases'
    | '/register'
    | '/tickets'
    | '/host/dashboard'
    | '/event/$eventId'
    | '/host/dashboard/create'
    | '/host/dashboard/events'
    | '/host/dashboard/home'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/help'
    | '/support'
    | '/host/join'
    | '/host/staff'
    | '/purchases/$pId'
    | '/tickets/$tId'
    | '/u/$uId'
    | '/explore/'
    | '/favourites/'
    | '/login/'
    | '/profile/'
    | '/purchases/'
    | '/register/'
    | '/tickets/'
    | '/host/dashboard'
    | '/host/dashboard/_layout'
    | '/event/$eventId/'
    | '/host/dashboard/'
    | '/host/dashboard/_layout/create'
    | '/host/dashboard/_layout/events'
    | '/host/dashboard/_layout/home'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  HelpRoute: typeof HelpRoute
  SupportRoute: typeof SupportRoute
  HostJoinRoute: typeof HostJoinRoute
  HostStaffRoute: typeof HostStaffRoute
  PurchasesPIdRoute: typeof PurchasesPIdRoute
  TicketsTIdRoute: typeof TicketsTIdRoute
  UUIdRoute: typeof UUIdRoute
  ExploreIndexRoute: typeof ExploreIndexRoute
  FavouritesIndexRoute: typeof FavouritesIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  PurchasesIndexRoute: typeof PurchasesIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
  TicketsIndexRoute: typeof TicketsIndexRoute
  HostDashboardRoute: typeof HostDashboardRouteWithChildren
  EventEventIdIndexRoute: typeof EventEventIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  HelpRoute: HelpRoute,
  SupportRoute: SupportRoute,
  HostJoinRoute: HostJoinRoute,
  HostStaffRoute: HostStaffRoute,
  PurchasesPIdRoute: PurchasesPIdRoute,
  TicketsTIdRoute: TicketsTIdRoute,
  UUIdRoute: UUIdRoute,
  ExploreIndexRoute: ExploreIndexRoute,
  FavouritesIndexRoute: FavouritesIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  PurchasesIndexRoute: PurchasesIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
  TicketsIndexRoute: TicketsIndexRoute,
  HostDashboardRoute: HostDashboardRouteWithChildren,
  EventEventIdIndexRoute: EventEventIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/help",
        "/support",
        "/host/join",
        "/host/staff",
        "/purchases/$pId",
        "/tickets/$tId",
        "/u/$uId",
        "/explore/",
        "/favourites/",
        "/login/",
        "/profile/",
        "/purchases/",
        "/register/",
        "/tickets/",
        "/host/dashboard",
        "/event/$eventId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/help": {
      "filePath": "help.tsx"
    },
    "/support": {
      "filePath": "support.tsx"
    },
    "/host/join": {
      "filePath": "host/join.tsx"
    },
    "/host/staff": {
      "filePath": "host/staff.tsx"
    },
    "/purchases/$pId": {
      "filePath": "purchases/$pId.tsx"
    },
    "/tickets/$tId": {
      "filePath": "tickets/$tId.tsx"
    },
    "/u/$uId": {
      "filePath": "u/$uId.tsx"
    },
    "/explore/": {
      "filePath": "explore/index.tsx"
    },
    "/favourites/": {
      "filePath": "favourites/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.tsx"
    },
    "/purchases/": {
      "filePath": "purchases/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    },
    "/tickets/": {
      "filePath": "tickets/index.tsx"
    },
    "/host/dashboard": {
      "filePath": "host/dashboard",
      "children": [
        "/host/dashboard/_layout",
        "/host/dashboard/"
      ]
    },
    "/host/dashboard/_layout": {
      "filePath": "host/dashboard/_layout.tsx",
      "parent": "/host/dashboard",
      "children": [
        "/host/dashboard/_layout/create",
        "/host/dashboard/_layout/events",
        "/host/dashboard/_layout/home"
      ]
    },
    "/event/$eventId/": {
      "filePath": "event/$eventId/index.tsx"
    },
    "/host/dashboard/": {
      "filePath": "host/dashboard/index.tsx",
      "parent": "/host/dashboard"
    },
    "/host/dashboard/_layout/create": {
      "filePath": "host/dashboard/_layout.create.tsx",
      "parent": "/host/dashboard/_layout"
    },
    "/host/dashboard/_layout/events": {
      "filePath": "host/dashboard/_layout.events.tsx",
      "parent": "/host/dashboard/_layout"
    },
    "/host/dashboard/_layout/home": {
      "filePath": "host/dashboard/_layout.home.tsx",
      "parent": "/host/dashboard/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
